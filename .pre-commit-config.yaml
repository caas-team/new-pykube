---
fail_fast: true
default_stages: [pre-commit, pre-push]
repos:
  # meta

  - repo: meta
    hooks:
      - id: check-hooks-apply
      - id: check-useless-excludes

  # formatters

  - repo: https://github.com/asottile/reorder_python_imports
    rev: v3.15.0
    hooks:
      - id: reorder-python-imports

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.10
    hooks:
      # Run the linter.
      - id: ruff
        args: [--fix]
      # Run the formatter.
      - id: ruff-format

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        stages: [pre-push]

  # linters

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: ["-x", "tests"]
        stages: [pre-push]

  - repo: local
    hooks:
      - id: prevent-todo-comments
        name: prevent todo comments
        entry: '# *(TODO|FIXME)\b' # matches a python comment beginning with "TODO" or "FIXME"
        language: pygrep
        files: \.py$

      - id: prevent-too-small-headings
        name: prevent too small headings
        entry: "^#{5,} " # matches a h5 or smaller markdown heading
        language: pygrep
        files: \.md$

      - id: prevent-invalid-alert-types
        name: prevent invalid alert types
        entry: '(?i)^> \[!(?!\b(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION)\b).+\]' # matches a github markdown callout/alert that doesn't use one of the supported keywords
        language: pygrep
        files: \.md$

      - id: safety
        name: safety
        entry: safety
        language: system
        pass_filenames: false
        args: ["check", "--bare"]
        stages: [pre-push]

      - id: poetry
        name: poetry
        description: Validates the structure of the pyproject.toml file
        entry: poetry check
        language: system
        pass_filenames: false
        files: ^pyproject.toml$
        stages: [pre-push]

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args: ["--strict", "-d", "{rules: {line-length: {max: 180}}}"]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML, types-requests]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-added-large-files
      - id: check-docstring-first
      - id: debug-statements
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-ast
      - id: check-builtin-literals
      - id: detect-private-key
      - id: mixed-line-ending
      - id: name-tests-test
        args: ["--django"]

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-use-type-annotations
      - id: python-no-log-warn
      - id: python-no-eval
      - id: python-check-mock-methods
      - id: python-check-blanket-noqa

  - repo: https://github.com/rbubley/mirrors-prettier
    rev: v3.6.2
    hooks:
      - id: prettier
        files: \.md$

  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.19.1
    hooks:
      - id: gitlint
